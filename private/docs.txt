Activities:

2020-7-16 # price_cost_after_discount field added
2020-8-20 # abraham add stock transactions in reports

Todo's:
HAKIM - sales_order_store_keeper_view # print redirect error
MANOJ - stock_adjustment_add_new # transaction date only must show

Procurement         WH      ACCOUNTS
PR = 1,3,19,20,11   17      18-25
PO = 22-17-18-25-21 17-18

Thing's to do:
- create 1 grid in all transaction
- create 1 function for all grid approval/rejection (all transaction)
- create 1 function for all form approval/rejection (all transaction)

Stock transfer - is the act of moving goods from one part of the distribution chain to another. 
An internal purchase order is created for stock transfer between branches and warehouses.

Sales Order - is a document generated by the seller upon receiving a purchase order from a buyer 
specifying the details about the items along with quantity, price. It's  also use as a confirmation 
document that is sent to the customers before delivery of items.

Delivery Note - is a document that lists all the goods included in a delivery, and is often referred to as a dispatch note, 
or goods receipt. The note is included in the shipment and lists the quantity of products included in the delivery, 
it doesn't list any values like price of goods.

Sales Return - is a merchandise that was returned to the seller by a customer. 

Purchase Receipts - are made when you accept Items from your Supplier usually against a Purchase Order. 
You can also accept Purchase Receipts directly without the need for a Purchase Order.

Purchase Return - is a prime entry book or a daybook which is used to record purchase returns. 
In other words, it is the journal which is used to record the goods which are returned to the suppliers.

Stock Adjustment - enable you to increase or decrease the quantity of items you have "In Stock" for a tracked 
inventory item, or revalue the item. 

Stock Corrections - used to adjust the in-stock quantity for a product. This might be used to correct the 
quantity of an item after a stock take or to write-off damaged items. When items are added or 
removed the necessary accounting adjustments will be made automatically.

Obsolescence of Stock -  is a term that refers to inventory that is at the end of its product life cycle. 
This inventory has not been sold or used for a long period of time and is not expected to be sold in the future. 
This type of inventory has to be written-down or written-off and can cause large losses for a company.

if _ip.selective_tax_price:            
    if int(request.vars.category_id) == 3:
        _selective_tax_foc = (float(_ip.selective_tax_price or 0) / int(_id.uom_value)) * int(_tq)
    else:                
        _selective_tax = (float(_ip.selective_tax_price or 0) / int(_id.uom_value)) * int(_tq)

API BASIC CRUD
Operation	    =    SQL	    =   HTTP	        =       RESTful WS	=   DDS	        =   MongoDB
Create	        -    INSERT	    -   PUT/POST	    -       POST	    -   write	    -   Insert
Read (Retrieve)	-    SELECT	    -   GET	            -       GET	        -   read/take	-   Find
Update (Modify)	-    UPDATE	    -   PUT/POST/PATCH	-       PUT	        -   write	    -   Update
Delete (Destroy)-	 DELETE	    -   DELETE	        -       DELETE	    -   dispose	    -   Delete


total = quantity * wholesale price

TOTAL AMOUNT = TOTAL AMOUNT + ((TOTAL AMOUNT * SELECTIVE TAX) / 100) 
EX: 50 + (50 * 100) / 100

DELIVERY NOTE HAKIM PRINT

NO AMOUNT ONLY QUANTITY
SALES INVOICE REPORT WITH AMOUNT
 
NO REMARKS

total amount = wholesale + (retail price * selective tax) / 100

selective tax = retail price + selective tax / 100

discount = grand total * discount / 100
grand total = grand total - discount

condition 
if item selective = disabled discount


IF CATEGORY IS P ALLOW DUPLICATE ITEMS

# for item discount
formula: 
    net price = (unit price * (100 - discount)) / 100
example:
    unit price  =   130
    discount    =   10 %
    net price = ( 130 * (100 - 10)) / 100

limit the items in printing, invoice and sales return only
for k in db((db.Stock_Request_Transaction.stock_request_id == request.args(0)) & (db.Stock_Request_Transaction.delete == False)).select(db.Item_Master.ALL, db.Stock_Request_Transaction.ALL, db.Item_Prices.ALL, left = [db.Item_Master.on(db.Item_Master.id == db.Stock_Request_Transaction.item_code_id),db.Item_Prices.on(db.Item_Prices.item_code_id == db.Stock_Request_Transaction.item_code_id)]):

19 - wael 
20 - john
11 - user
22 - back office
17 - HAKIM
18 - manoj 
21 - juti
isinstance(_id, list):

sudo systemctl restart postgresql-10.service
sudo systemctl stop postgresql.service
sudo systemctl start postgresql.service
sudo systemctl enable postgresql.service
sudo systemctl status postgresql.service

HR MANAGEMENT
Main Menu
- Core HR/HRIS
    - Basic Information
    - Address Details
    - Account Details
    - Employment Details
    - Other Details
- Payroll Management 
    - Dashboard
    - Run Payroll
    - Employees
    - Payroll History
    - Benefits
    - Forms
    - Settings
- Leave and Attendance Management
    - Dashboard
    - Application
    - Approval
    - Config
    - Reports
- Employee Self-Service
- Reports

ASSET MANAGEMENT
Main Menu
    - Dashboard
    - IT Management    
        - Dashboard
        - Machines
        - Software
        - Hardware
        - Reports
    - Office Administration
        - Dashboard
        - x
        - x
        - x
        - x
- Reports

ADMINISTRATION MANAGEMENT
Main Menu
    - Dashboard

FLEET MANAGEMENT
Main Menu
    - Dashboard
 
FINANCE MANAGEMENT
Main Menu
    - Dashboard