Activities:

2020-7-16 # price_cost_after_discount field added
2020-8-20 # abraham add stock transactions in reports

Todo's:
HAKIM - sales_order_store_keeper_view # print redirect error
MANOJ - stock_adjustment_add_new # transaction date only must show

Procurement         WH      ACCOUNTS
PR = 1,3,19,20,11   17      18-25
PO = 22-17-18-25-21 17-18

Thing's to do:
- create 1 grid in all transaction
- create 1 function for all grid approval/rejection (all transaction)
- create 1 function for all form approval/rejection (all transaction)

Stock transfer - is the act of moving goods from one part of the distribution chain to another. 
An internal purchase order is created for stock transfer between branches and warehouses.

Sales Order - is a document generated by the seller upon receiving a purchase order from a buyer 
specifying the details about the items along with quantity, price. It's  also use as a confirmation 
document that is sent to the customers before delivery of items.


total = quantity * wholesale price

TOTAL AMOUNT = TOTAL AMOUNT + ((TOTAL AMOUNT * SELECTIVE TAX) / 100) 
EX: 50 + (50 * 100) / 100

DELIVERY NOTE HAKIM PRINT

NO AMOUNT ONLY QUANTITY
SALES INVOICE REPORT WITH AMOUNT
 
NO REMARKS

total amount = wholesale + (retail price * selective tax) / 100

selective tax = retail price + selective tax / 100

discount = grand total * discount / 100
grand total = grand total - discount

condition 
if item selective = disabled discount


IF CATEGORY IS P ALLOW DUPLICATE ITEMS

# for item discount
formula: 
    net price = (unit price * (100 - discount)) / 100
example:
    unit price  =   130
    discount    =   10 %
    net price = ( 130 * (100 - 10)) / 100

limit the items in printing, invoice and sales return only
for k in db((db.Stock_Request_Transaction.stock_request_id == request.args(0)) & (db.Stock_Request_Transaction.delete == False)).select(db.Item_Master.ALL, db.Stock_Request_Transaction.ALL, db.Item_Prices.ALL, left = [db.Item_Master.on(db.Item_Master.id == db.Stock_Request_Transaction.item_code_id),db.Item_Prices.on(db.Item_Prices.item_code_id == db.Stock_Request_Transaction.item_code_id)]):

19 - wael 
20 - john
11 - user
22 - back office
17 - HAKIM
18 - manoj 
21 - juti
isinstance(_id, list):

sudo systemctl restart postgresql-10.service
sudo systemctl stop postgresql.service
sudo systemctl start postgresql.service
sudo systemctl enable postgresql.service
sudo systemctl status postgresql.service

HR MANAGEMENT
Main Menu
- Core HR/HRIS
    - Basic Information
    - Address Details
    - Account Details
    - Employment Details
    - Other Details
- Payroll Management 
    - Dashboard
    - Run Payroll
    - Employees
    - Payroll History
    - Benefits
    - Forms
    - Settings
- Leave and Attendance Management
    - Dashboard
    - Application
    - Approval
    - Config
    - Reports
- Employee Self-Service
- Reports

ASSET MANAGEMENT
Main Menu
    - Dashboard
    - IT Management    
        - Dashboard
        - Machines
        - Software
        - Hardware
        - Reports
    - Office Administration
        - Dashboard
        - x
        - x
        - x
        - x
- Reports

ADMINISTRATION MANAGEMENT
Main Menu
    - Dashboard

FLEET MANAGEMENT
Main Menu
    - Dashboard
 
FINANCE MANAGEMENT
Main Menu
    - Dashboard