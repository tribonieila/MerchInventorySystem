Merch & Partners Co. WLL., Zone 40, St. 340, P.O. Box. 5511
Unit No. 27, Bldg. 149, Salwa Road, Al-Asiri Interchange
Doha, Doha
Qatar
Phone: 55703868

merch4658666

T.force('it-it')
op: lar 
pa: 54193
np: larrypass123

127.0.0.1 5 1563693275

DayOFF
August 24, 2019 - Troubleshoot Tawar Mall

Operation	          SQL	    HTTP	              RESTful WS	    DDS
Create	            INSERT	PUT / POST	        POST	        write
Read (Retrieve)	    SELECT	GET	                GET	            read / take
Update (Modify)	    UPDATE	PUT / POST / PATCH	PUT	            write
Delete (Destroy)	  DELETE	DELETE	            DELETE	        dispose

DATABASE 
Merch_HR_DB
Merch_RootDB
m3rch_admin_db
m3rch_asset_db
m3rch_finances_db
m3rch_fleet_db
m3rch_hr_db
m3rch_root_db
m3rch_inv_db
https://adminlte.io/themes/AdminLTE/index.html

MERCH STRUCTURE
Merch ERP/IT Admin  -   :3000/m3rch_root_db
 - Merch Inventory  -   :3010/m3rch_inv_db
 - Merch Sales      -   :3020/m3rch_inv_db
 - Merch Procurement-   :3030/m3rch_inv_db
 - Merch Finances   -   :3040/m3rch_finance_db
 - Merch Assets     -   :3050/m3rch_assets_db
 - Merch HR         -   :3060/m3rch_hr_db  
 - Merch Off Admin  -   :3070/m3rch_off_admin_db
 - Merch Fleet      -   :3080/m3rch_fleet_db
 

lpstat -p -d
lpr -P "MyPrinterName" filename.pdf
Generic-PostScript # printer name

git fetch --all followed by 'git reset --hard origin/master

SELECT MAX(ID) FROM public."Item_Master";
SELECT nextval('"Item_Master_id_seq"');
SELECT setval('"Item_Master_id_seq"', (SELECT MAX(ID) FROM public."Item_Master")+1);

Issue
What options can I specify when starting Acrobat/Adobe Reader from the command line?
Solutions (resolution Method)
You can use Acrobat/Adobe Reader command-line operations as is, but it is not a supported feature. We do not provide information on the use of technical support. Please understand it before hand.
The following command list is an example of Adobe Reader, but if you use Acrobat, use Acrobat.exe instead of Acrord32.exe.
-Acrord32.exe filename
View PDF files in Adobe Reader

Startup options
/n: Start Acrobat application as another instance when you are already running Acrobat
/s: start acrobat without displaying the splash screen
/o: Launch acrobat without displaying the Open file dialog
/h: Start Acrobat but do not display it (only load it in memory)

-Acrord32.exe/p filename
print PDF files in Adobe Reader
-Acrord32.exe/t path Printername drivername portname
Start Adobe Reader and print a PDF file without displaying the Print dialog box and exit Adobe Reader

$('#no_table_other_charges, #no_table_custom_duty_charges, #no_table_landed_cost, #discount').change(function(){
        
        addcomputed();
    });

    function addcomputed(){
        var _addcomputed = 0

        var _lan = $('#no_table_landed_cost').val();
        var _cus = $('#no_table_custom_duty_charges').val();
        var _oth = $('#no_table_other_charges').val();

        var _ton = $('#total_net_amount').val();
        var _dis = $('#discount').val();        
        var _for = $('#foreign_total_amount').val();
        var _loc = $('#local_total_amount').val();

        _for = (parseFloat(_ton) * (100 - parseInt(_dis))) / 100
        _loc = parseFloat(_for) * parseFloat(_lan)
        _addcomputed = parseFloat(_loc) + parseFloat(_oth) + parseFloat(_cus) 
        $('#foreign_total_amount').val(Number(_for.toFixed(6)).toLocaleString());          
        $('#local_total_amount').val(Number(_addcomputed.toFixed(6)).toLocaleString());          
        //$('#local_total_amount').html(_addcomputed);
        console.log(_for,_loc, _addcomputed, );
    }
    
Printing options
Path: File path
Printername: Printer Name
DriverName: Printer driver name (checked with printer properties)
PortName: Printer port name (do not include the letter "/")
#---- sales invoice & sales return automatic print ----#
def sales_order_report_account_user() # sales invoice

os.system(acrobat_path + " /p /h " + self.options.dest_name)

$('#foreign_amount').val(Number(fa.toFixed(2)).toLocaleString());
$('#local_amount').val(Number(la.toFixed(2)).toLocaleString());

def register_bottle():
  tasters = range(10)
  form=SQLFORM.factory(db.bottle,*[Field('taster%i'%i, db.auth_user,label=T('Taster #%i'%i)) for i in tasters])
  if form.accepts(request,session):
    bottle_id = \db.bottle.insert(**db.bottle._filter_fields(form.vars))
   for i in tasters:
     if 'taster%i'%i in form.vars:
       db.taster.insert(auth_user=form.vars...
# consolidation 

<script src="{{=URL('static','js/lou-multi-select-57fb8d3/js/jquery.multi-select.js')}}" type="text/javascript"></script>
<script>
    $('#my-select').multiSelect({
        selectableHeader: "<div class='custom-header'>Selectable PO</div>",
        selectionHeader: "<div class='custom-header'>Selected PO</div>",
        afterSelect: function(values){
            var myJSON = JSON.parse(values);
            ajax('{{=URL('procurement','selected_po')}}' + '/' +  myJSON ); 
        },
        afterDeselect: function(values){
            var myJSON = JSON.parse(values);
            ajax('{{=URL('procurement','deselected_po')}}' + '/' +  myJSON ); 
        }
    })
    
</script>
<script>
    $(document).ready(function(){
        $("#proceed").hide();
        $("#btnProceed").click(function(){
             $("#proceed").slideDown('slow');
             return false;
        });
    });
</script>

import reshaper
from bidi.algorithm import get_display
from reportlab.platypus import SimpleDocTemplate, Paragraph
from reportlab.pdfbase import pdfmetrics
from reportlab.lib.styles import ParagraphStyle
from reportlab.pdfbase.ttfonts import TTFont

arabic_text = reshaper.reshape(u'العربية')Com
arabic_text = get_display(arabic_text)
pdfmetrics.registerFont(TTFont('Arabic-bold', '/path-to-your-arabic-font'))

TRUNCATE TABLE "<table>" RESTART IDENTITY; // PostgreSQL

TRUNCATE TABLE [<table>] GO // SQL Server
ALTER SEQUENCE Test.CountBy1 RESTART WITH 1 ;  // SQL Server
TRUNCATE TABLE PartitionTable1 WITH (PARTITIONS (2, 4, 6 TO 8));  
GO  
sudo -H pip install psycopg2
sudo dpkg -i /path/to/deb/file followed by sudo apt-get install -f 
sudo apt install ./name.deb

python web2py.py -i 127.0.0.1 -p 8000 -f /path/to/apps
* run bin file
    chmod +x file-name.run
    ./file-name.run
    sudo ./file-name.run

for page in pages:
    canvas.setPageSize((page.BBox[2], page.BBox[3]))
    canvas.doForm(makerl(canvas, page))
    canvas.showPage()

{{if form.errors:}}    
<ul>
    {{for fieldname in form.errors:}}
        <li>{{=form.errors[fieldname]}}</li>
    {{pass}}
</ul>
{{form.errors.clear()}}
{{pass}}


Edit static/web2py.js search for /*helper for flash messages*/

and add this command:

setTimeout(‘jQuery(".flash").fadeOut("slow")',5000);

just after:

if (flash.html()) flash.append('<span id="closeflash"> &times; </span>').slideDown();

Adjust 5000 that stands for 5 secods to your needs.

hmac+md5 or hmac+sha512

def flash(message, type='info'):
    return DIV(BUTTON(XML('&times;'), _type='button', _class='close', data=dict(dismiss='alert')),
               message, class='alert alert-%s' % type)

response.flash = flash('You did it!', 'success')

    $(document).on('paste', '#no_table_item_code', function(e) {
        window.setTimeout(function() {
        var withoutSpaces = $("#no_table_item_code").val();
        withoutSpaces = withoutSpaces.replace(/\s+/g, '');
        $("#no_table_item_code").val(withoutSpaces);
            }, 1);
    });

rows=db(WHERE CLAUSE IF YOU HAVE SOME OTHER THAN THE JOIN).select(db.parent.ALL, db.child.ALL, db.grandchild.ALL, join=db.child.on(db.child.parent_id==db.parent.id), left=db.grandchild.on(db.child.id==db.grandchild.child_id))
web2py_component("{{=URL('pricing', 'priceListProduct.load')}}" + "?priceListProductId=" + priceListProductId, target='priceListProductEdit')
# Create a database named 'person' with 'last_name' and 'first_name' fields.
# web2py also creates a field named 'id' automatically.
db.define_table('person',Field('last_name'), Field('first_name'))
     
                 <div class="checkbox">
                <label class="col-sm-6 control-label">
                    <input type="checkbox" >
                    Discount %
                </label>
            </div>

     if ($('#discount').prop('checked')) {
        $('#no_table_discount_percentage').show();
    } else {
        $('#no_table_discount_percentage').hide();
        $('#no_table_discount_percentage').change(function(){
            if ($('#discount').prop('checked')) {
                $('#no_table_discount_percentage').show();
            } else {
                $('#no_table_discount_percentage').hide();
            }
        });
    }

# If no database exists, generate a database of 101 unique records
# with names in the form John1 Smith1, John43 Smith43, etc.
if db(db.person).isempty():
    for eachName in range(101):
        nextNumber=str(eachName)
        db.person.update_or_insert(last_name='Smith'+nextNumber,first_name='John'+nextNumber)
    jQuery(function($) { 
      var data = [ {{for x in db(db.GroupLine).select():}}
        { text: '{{=x.group_line_code}} - {{=x.group_line_name}}', value: '{{=x.id}}', children: [ {{for y in db(db.Brand_Line.group_line_id == x.id).select(db.Brand_Line.brand_line_code, db.Brand_Line.brand_line_name, db.Brand_Line.id  ):}}
            { text:'{{=y.brand_line_code}} - {{=y.brand_line_name}}', value:'{{=y.id}}'}, {{pass}} ] }, {{pass}}   
      ];       
      $('#no_table_group_line_code_id').cascadingSelect({
        subSelects: ['#no_table_brand_line_code_id'],
        data: data
    });

def index():
    import json
    # Select all the records, to show how
    # datatables.net paginates.
    # Rows can't be serialized because they contain a reference to
    # an open database connection. Use as_list()
    # to serialize the query result.
    people = json.dumps(db(db.person).select().as_list())
    # Convert to XML for DataTable
    return dict(results=XML(people))


redirect(URL('index', args=(1,2,3), vars=dict(a='b')))

        for i in db(db.Stock_Adjustment_Transaction_Temp.ticket_no_id == str(request.args(0))).select(db.Stock_Adjustment_Transaction_Temp.ALL):
            
            _itm_code = db(db.Item_Master.id == i.item_code_id).select().first()
            
            _itm_price = db(db.Item_Prices.item_code_id == i.item_code_id).select().first()
            
            _qty = i.quantity * _itm_code.uom_value + i.pieces            
            
            _price_cost = i.average_cost /_itm_code.uom_value # price_cost per pcs.

            _total_cost += _price_cost * _qty # total cost per line

<div class="form_edit" style="display:none;">
    <form class="form" role="form">
      <div class="form-group">
        <label for="quantity">Quantity</label>
        <input type="numbers" class="form-control" id="quantity" name="quantity" value="0">
      </div>
      <div class="form-group">
        <label for="pieces">Pieces</label>
        <input type="numbers" class="form-control" id="pieces" name="pieces" value="0">
      </div>
    </form>
</div>
  <script>
  $(document).ready(function() {
  $("#bootbox").on("click", function(event) {
    var modal = bootbox.dialog({
        message: $(".form_edit").html(),
        title: "Your awesome modal",
        buttons: [
          {
            label: "Save",
            className: "btn btn-primary pull-left",
            callback: function() {

              alert($('success').val());
             
              return false;
            }
          },
          {
            label: "Close",
            className: "btn btn-default pull-left",
            callback: function() {
              console.log("just do something on close");
            }
          }
        ],
        show: false,
        onEscape: function() {
          modal.modal("hide");
        }
    });
    
    modal.modal("show");
  });
  

});
</script>



var stateObject = {
    "California": {
        "Monterey": ["Salinas", "Gonzales"],
        "Alameda": ["Berkeley"]
    },
    "Oregon": {
        "Douglas": ["Roseburg", "Winston"],
    }
}
window.onload = function () {
    var stateSel = document.getElementById("stateSel"),
        countySel = document.getElementById("countySel"),
        citySel = document.getElementById("citySel");
    for (var state in stateObject) {
        stateSel.options[stateSel.options.length] = new Option(state, state);
    }
    stateSel.onchange = function () {
        countySel.length = 1; // remove all options bar first
        citySel.length = 1; // remove all options bar first
        if (this.selectedIndex < 1) {
          countySel.options[0].text = "Please select state first"
          citySel.options[0].text = "Please select county first"
          return; // done   
        }  
        countySel.options[0].text = "Please select county"
        for (var county in stateObject[this.value]) {
            countySel.options[countySel.options.length] = new Option(county, county);
        }
        if (countySel.options.length==2) {
          countySel.selectedIndex=1;
          countySel.onchange();
        }  
        
    }
    stateSel.onchange(); // reset in case page is reloaded
    countySel.onchange = function () {
        citySel.length = 1; // remove all options bar first
        if (this.selectedIndex < 1) {
          citySel.options[0].text = "Please select county first"
          return; // done   
        }  
        citySel.options[0].text = "Please select city"
        
        var cities = stateObject[stateSel.value][this.value];
        for (var i = 0; i < cities.length; i++) {
            citySel.options[citySel.options.length] = new Option(cities[i], cities[i]);
        }
        if (citySel.options.length==2) {
          citySel.selectedIndex=1;
          citySel.onchange();
        }  
        
    }
}


            _outer = int(int(_stk_file.probational_balance) / int(_itm_code.uom_value))
            _pcs = int(_stk_file.probational_balance) - (int(_outer * _itm_code.uom_value))
            _on_balanced = str(_outer) + ' ' + str(_pcs) + '/' +str(_itm_code.uom_value)

            _outer_transit = int(int(_stk_file.stock_in_transit) / int(_itm_code.uom_value))   
            _pcs_transit = int(_stk_file.stock_in_transit) - (int(_outer_transit * _itm_code.uom_value))
            _on_transit = str(_outer_transit) + ' ' + str(_pcs_transit) + '/' + str(_itm_code.uom_value)

            _outer_on_hand = int(int(_stk_file.closing_stock) / int(_itm_code.uom_value))
            _pcs_on_hand = int(_stk_file.closing_stock) - (int(_outer_on_hand * _itm_code.uom_value))
            _on_hand = str(_outer_on_hand) + ' ' + str(_pcs_on_hand) + '/' + str(_itm_code.uom_value)

<!-- begin -->
<button class="load_content" data-url="{{=URL('default', 'otherthing1')}}" data-target="ajax_container"> Click to load content1 </button>
<button class="load_content" data-url="{{=URL('default', 'otherthing2')}}" data-target="ajax_container"> Click to load content2 </button>
<button class="load_content" data-url="{{=URL('default', 'otherthing3')}}" data-target="ajax_container"> Click to load content3 </button>
<button class="load_content" data-url="{{=URL('default', 'otherthing4')}}" data-target="ajax_container"> Click to load content4 </button>


<div id="ajax_container"> <!-- CONTENT COMES HERE --> </div>

<script>
$(function () {
   $('.load_content').on('click', function (e) {
        elem = $(this); // elem = $(e.target)
        url = elem.attr("data-url");
        target = elem.attr("data-target");
        web2py_ajax_page("GET", url, "", target);
        return false; // e.preventDefault()
      });
})
</script>
<!-- end -->

