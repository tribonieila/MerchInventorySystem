merch4658666

T.force('it-it')

sudo -H pip install psycopg2
sudo dpkg -i /path/to/deb/file followed by sudo apt-get install -f 
sudo apt install ./name.deb

python web2py.py -i 127.0.0.1 -p 8000 -f /path/to/apps
* run bin file
    chmod +x file-name.run
    ./file-name.runsudo 
    ./file-name.run

rows=db(WHERE CLAUSE IF YOU HAVE SOME OTHER THAN THE JOIN).select(db.parent.ALL, db.child.ALL, db.grandchild.ALL, join=db.child.on(db.child.parent_id==db.parent.id), left=db.grandchild.on(db.child.id==db.grandchild.child_id))
web2py_component("{{=URL('pricing', 'priceListProduct.load')}}" + "?priceListProductId=" + priceListProductId, target='priceListProductEdit')
# Create a database named 'person' with 'last_name' and 'first_name' fields.
# web2py also creates a field named 'id' automatically.
db.define_table('person',Field('last_name'), Field('first_name'))
 
# If no database exists, generate a database of 101 unique records
# with names in the form John1 Smith1, John43 Smith43, etc.
if db(db.person).isempty():
    for eachName in range(101):
        nextNumber=str(eachName)
        db.person.update_or_insert(last_name='Smith'+nextNumber,first_name='John'+nextNumber)
    jQuery(function($) { 
      var data = [ {{for x in db(db.GroupLine).select():}}
        { text: '{{=x.group_line_code}} - {{=x.group_line_name}}', value: '{{=x.id}}', children: [ {{for y in db(db.Brand_Line.group_line_id == x.id).select(db.Brand_Line.brand_line_code, db.Brand_Line.brand_line_name, db.Brand_Line.id  ):}}
            { text:'{{=y.brand_line_code}} - {{=y.brand_line_name}}', value:'{{=y.id}}'}, {{pass}} ] }, {{pass}}   
      ];       
      $('#no_table_group_line_code_id').cascadingSelect({
        subSelects: ['#no_table_brand_line_code_id'],
        data: data
    });

def index():
    import json
    # Select all the records, to show how
    # datatables.net paginates.
    # Rows can't be serialized because they contain a reference to
    # an open database connection. Use as_list()
    # to serialize the query result.
    people = json.dumps(db(db.person).select().as_list())
    # Convert to XML for DataTable
    return dict(results=XML(people))

{{extend 'layout.html'}}
{{if 'message' in globals():}}
<h3>{{=message}}</h3>
{{pass}}
<script
  src="https://cdn.datatables.net/1.10.10/js/jquery.dataTables.min.js">
  src="https://cdn.datatables.net/1.10.10/js/dataTables.bootstrap.min.js">
</script>
<link rel="stylesheet"
  media="screen"
  href="https://cdn.datatables.net/1.10.10/css/dataTables.bootstrap.min.css">
   <table id="person-table" class="table table-bordered table-striped" cellspacing="0" width="100%">
        <thead>
            <tr>
                <th>First name</th>
                <th>Last name</th>
            </tr>
        </thead>
    </table>
 
<script type="text/javascript">
$(document).ready(function(){
    $("#person-table").DataTable({
        data:  {{=results}},
        columns: [
            { data: 'first_name' },
            { data: 'last_name' }
            // 'id' omitted to show that you can
            // use only the fields you choose
        ]
    })
});
</script>
<script>
    $(document).ready(function() {
        $(window).keydown(function(event){
            if(event.keyCode == 13) {
                event.preventDefault();
            return false;
            }
        });
    });
</script>

Field('prefix_id','reference Prefix_Data', ondelete = 'NO ACTION'),

_total_amount += int(i.Stock_Adjustment_Transaction.quantity) * float(i.Stock_Adjustment_Transaction.average_cost) / int(i.Stock_Adjustment_Transaction.uom)

<select disabled="disabled" id="sel_test">
    <option value="1">One</option>
    <option value="2">Two</option>
    <option value="3">Three</option>
</select>

<input type="hidden" id="hdn_test" />
<div id="output"></div>

$(function(){
    var select_val = $('#sel_test option:selected').val();
    $('#hdn_test').val(select_val);
    $('#output').text('Selected value is: ' + select_val);
});
                
                <div class="row">
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="col-sm-4 control-label">Item Code</label>
                            <!-- <el-autocomplete
                            class="inline-input"
                            v-model="state2"
                            :fetch-suggestions="querySearch"
                            placeholder="Item Code"
                            :trigger-on-focus="false"
                            @select="handleSelect"
                          ></el-autocomplete> -->
                            <div class="col-sm-8">
                                {{=form2.custom.widget.item_code_id}}
                            </div>
                        </div>   
                    </div>
                
                
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="col-sm-4 control-label">
                                Quantity
                            </label>
                            <div class="col-sm-8">
                                {{=form2.custom.widget.quantity}}
                                <!-- <el-input-number v-model="num1" controls-position="right" @change="handleChange" :min="0" :max="10"></el-input-number> -->
                            </div>
                        </div>   
                    </div>
                
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="col-sm-4 control-label">Pieces</label>
                            <div class="col-sm-8">
                                <!-- <el-input-number v-model="num2" controls-position="right" @change="handleChange" :min="0" :max="10"></el-input-number> -->
                                
                                {{=form2.custom.widget.pieces}}
                            </div>
                        </div>   
                    </div>
                    <div class="col-md-2">
                        <div class="form-group">
                            <label class="col-sm-4 control-label">Average Cost</label>
                            <div class="col-sm-8">
                                <!-- <el-input placeholder="Average Cost" v-model="input"></el-input> -->
                                <div id="average_cost"></div>
                                
                                
                            </div>
                        </div>   
                    </div>    
                    <div class="col-md-3">
                        <div class="form-group">
                            <label class="col-sm-4 control-label">Category</label>                            
                            <div class="col-sm-8">
                                    <!-- <el-select v-model="value" placeholder="Select">
                                        <el-option
                                            v-for="item in options"
                                            :key="item.value"
                                            :label="item.label"
                                            :value="item.value">
                                        </el-option>
                                        </el-select> -->
                                {{=form2.custom.widget.category_id}}
                            </div>
                        </div>   
                    </div>
                    <div class="col-md-1">
                        <div class="form-group">
                            <label class="col-sm-4 control-label"></label>
                            <div class="col-sm-8">            
                                    <!-- <el-button type="success">Add</el-button> -->
                            <input class="btn btn-success" type="button" onclick="btnsubmit();" value="Add">
                            </div>
                        </div>        
                    </div>            
                </div>
redirect(URL('index', args=(1,2,3), vars=dict(a='b')))

        for i in db(db.Stock_Adjustment_Transaction_Temp.ticket_no_id == str(request.args(0))).select(db.Stock_Adjustment_Transaction_Temp.ALL):
            
            _itm_code = db(db.Item_Master.id == i.item_code_id).select().first()
            
            _itm_price = db(db.Item_Prices.item_code_id == i.item_code_id).select().first()
            
            _qty = i.quantity * _itm_code.uom_value + i.pieces            
            
            _price_cost = i.average_cost /_itm_code.uom_value # price_cost per pcs.

            _total_cost += _price_cost * _qty # total cost per line

<script>
    $(function() {
        $('#Stock_Adjustment_location_code_id').click(function() {
            var locOpt = $('#Stock_Adjustment_location_code_id').find(":selected").val();
            console.log(locOpt)
            
            $('#_loc_cod_id').val(locOpt);
            {{for c in db(db.Location.id == 1).select(): }}
            $('#Stock_Adjustment_stock_adjustment_code').val('{{=c.stock_adjustment_code}}');
            {{ pass }}

            ajax('{{=URL('stock_adjustment_add_new')}}' + '/' + locOpt);
            
        });
    });
</script>
<script>
jQuery('#myform').submit(function() {
  ajax('{{=URL("new_post")}}',
       ['email', 'country'], 'target');
  return false;
});
</script>
new Vue({
	el: "#app",
	data: () => ({
		items: [
			{
				id: "id1",
				name: "John Doe",
				email: "email@example.com"
			},
			{
				id: "id2",
				name: "Jone Doe",
				email: "email2@example.com"
			}
		],
		selected: [],
		selectAll: false
	}),
	methods: {
		select() {
			this.selected = [];
			if (!this.selectAll) {
				for (let i in this.items) {
					this.selected.push(this.items[i].id);
				}
			}
		}
	}
});

<div id="app">
	<div class="text-uppercase text-bold">id selected: {{selected}}</div>
	<table class="table table-striped table-hover">
		<thead>
			<tr>
				<th>
					<label class="form-checkbox">
    <input type="checkbox" v-model="selectAll" @click="select">
    <i class="form-icon"></i>
  </label>
				</th>
				<th>id</th>
				<th>name</th>
				<th>email</th>
			</tr>
		</thead>
		<tbody>
			<tr v-for="i in items">
				<td>
					<label class="form-checkbox">
    					<input type="checkbox" :value="i.id" v-model="selected">
						<i class="form-icon"></i>
  					</label>
				</td>
				<td>{{i.id}}</td>
				<td>{{i.name}}</td>
				<td>{{i.email}}</td>
			</tr>
		</tbody>
	</table>
</div>
<div class="form_edit" style="display:none;">
    <form class="form" role="form">
      <div class="form-group">
        <label for="quantity">Quantity</label>
        <input type="numbers" class="form-control" id="quantity" name="quantity" value="0">
      </div>
      <div class="form-group">
        <label for="pieces">Pieces</label>
        <input type="numbers" class="form-control" id="pieces" name="pieces" value="0">
      </div>
    </form>
</div>
  <script>
  $(document).ready(function() {
  $("#bootbox").on("click", function(event) {
    var modal = bootbox.dialog({
        message: $(".form_edit").html(),
        title: "Your awesome modal",
        buttons: [
          {
            label: "Save",
            className: "btn btn-primary pull-left",
            callback: function() {

              alert($('success').val());
             
              return false;
            }
          },
          {
            label: "Close",
            className: "btn btn-default pull-left",
            callback: function() {
              console.log("just do something on close");
            }
          }
        ],
        show: false,
        onEscape: function() {
          modal.modal("hide");
        }
    });
    
    modal.modal("show");
  });
  

});
</script>



var stateObject = {
    "California": {
        "Monterey": ["Salinas", "Gonzales"],
        "Alameda": ["Berkeley"]
    },
    "Oregon": {
        "Douglas": ["Roseburg", "Winston"],
    }
}
window.onload = function () {
    var stateSel = document.getElementById("stateSel"),
        countySel = document.getElementById("countySel"),
        citySel = document.getElementById("citySel");
    for (var state in stateObject) {
        stateSel.options[stateSel.options.length] = new Option(state, state);
    }
    stateSel.onchange = function () {
        countySel.length = 1; // remove all options bar first
        citySel.length = 1; // remove all options bar first
        if (this.selectedIndex < 1) {
          countySel.options[0].text = "Please select state first"
          citySel.options[0].text = "Please select county first"
          return; // done   
        }  
        countySel.options[0].text = "Please select county"
        for (var county in stateObject[this.value]) {
            countySel.options[countySel.options.length] = new Option(county, county);
        }
        if (countySel.options.length==2) {
          countySel.selectedIndex=1;
          countySel.onchange();
        }  
        
    }
    stateSel.onchange(); // reset in case page is reloaded
    countySel.onchange = function () {
        citySel.length = 1; // remove all options bar first
        if (this.selectedIndex < 1) {
          citySel.options[0].text = "Please select county first"
          return; // done   
        }  
        citySel.options[0].text = "Please select city"
        
        var cities = stateObject[stateSel.value][this.value];
        for (var i = 0; i < cities.length; i++) {
            citySel.options[citySel.options.length] = new Option(cities[i], cities[i]);
        }
        if (citySel.options.length==2) {
          citySel.selectedIndex=1;
          citySel.onchange();
        }  
        
    }
}

