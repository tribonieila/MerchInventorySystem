    {{=form}}
    <hr>
    {{=form2.custom.begin}}
    <div class="row">    
        <div class="col-md-2">
            <div class="form-group">
                <label class="col-sm-4 control-label">Item Code</label>
                <div class="col-sm-8">         
                        {{=form2.custom.widget.item_code}}

                    
                </div>                           
            </div>                        
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label class="col-sm-6 control-label">Quantity</label>
                <div class="col-sm-6"> 
                    {{=form2.custom.widget.quantity}}
                </div>
            </div>                    
        </div>
        <div class="col-md-2">
            <div class="form-group">
                <label class="col-sm-6 control-label">Pieces</label>
                <div class="col-sm-6">                                
                    {{=form2.custom.widget.pieces}}
                </div>                           
            </div>    
        </div>
        <div class="col-md-3">
            <div class="form-group">
                <label class="col-sm-6 control-label">Most Recent Cost</label>
                <div class="col-sm-4"> 
                    <div id = "_most_recent_cost"></div>
                </div>
            </div>                    
        </div>                   
        <div class="col-md-2">
            <div class="form-group">
                <label class="col-sm-4 control-label">Category</label>
                <div class="col-sm-8"> 
                    {{=form2.custom.widget.category_id}}
                </div>
            </div>                    
        </div>
        <div class="col-md-1">          
                <input class="btn btn-primary" type="submit" value="add" id="btnadd">            
        </div>                                              
    </div>
    {{=form2.custom.end}}
    <div id = "_item_code_description"></div>      


<script>

    $(document).on('paste', '#no_table_item_code', function(e) {
        window.setTimeout(function() {
        var withoutSpaces = $("#no_table_item_code").val();
        withoutSpaces = withoutSpaces.replace(/\s+/g, '');
        $("#no_table_item_code").val(withoutSpaces);
            }, 1);
    });
    $('#no_table_item_code').change(function(){
        ajax('{{=URL('purchase_request_item_code_description')}}', ['item_code'], '_item_code_description');     
        ajax('{{=URL('generate_item_code_recent_cost')}}', ['item_code'], '_most_recent_cost');     
        return false;
    });    

    $('#btnValidate').click(function(){        
        ajax('{{=URL('procurement','add_other_charges', args=request.args(0))}}', ['landed_cost', 'other_charges','custom_duty_charges','trade_terms_id','exchange_rate','selective_tax','supplier_invoice','supplier_account_code','location_code_id', 'discount']);        
        //$( "#POTtbl" ).load(window.location.href + " #POTtbl" );
        $('#btnSubmit').removeAttr('disabled'); 
    });   

    $('#btnadd').click(function(){
        $( "#POTtbl" ).load(window.location.href + " #POTtbl" );
    });
    

</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/bootbox.js/4.4.0/bootbox.min.js"></script>
<script>

$(document).ready(function(){    
    $(".total_amount").prop("readonly", true);
    var $tblrows = $("#POTtbl tbody tr");

    $tblrows.each(function(index){
        var $tblrow = $(this);
        $tblrow.find(".quantity, .pieces, .price_cost").on("change", function(){

            var ctr = $tblrow.find("[name=ctr]").val();
            var uom = $tblrow.find("[name=uom]").val();
            var qty = $tblrow.find("[name=quantity]").val();
            var pcs = $tblrow.find("[name=pieces]").val();
            var pri = $tblrow.find("[name=price_cost]").val();

            var itm = parseInt(qty) * parseInt(uom) + parseInt(pcs);
            var ppp = parseFloat(pri) / parseInt(uom);
            var sub = parseInt(itm, 10) * parseFloat(ppp);
            

            var xch = $("#no_table_exchange_rate").val();
            var lnd = $("#no_table_landed_cost").val();
            var foc = $("#foreign_total_amount").val();
            var loc = $("#local_total_amount").val();
            var pur = $("#purchase_value").val();
            var dis = $("#discount").val();
            
            if (!isNaN(sub)){
                var total_net_amount = 0;
                var foa = 0;
                var local = 0;

                $tblrow.find(".total_amount").val(sub.toFixed(2));
                $(".total_amount").each(function(){
                    var stval = parseFloat($(this).val());
                    total_net_amount += isNaN(stval) ? 0 : stval;
                });

                $(".total_net_amount").val(total_net_amount.toFixed(2));

                foa = (parseFloat(total_net_amount) * (100 - parseInt(dis))) / 100;
                local = parseFloat(xch) * parseFloat(foa);
                landed_cost = parseFloat(lnd) * parseFloat(foa);
                purch = parseFloat()
                $(".foreign_total_amount").val(foa.toFixed(2));
                $(".local_total_amount").val(local.toFixed(2));
                $(".purchase_value").val(landed_cost.toFixed(2));

            }
        });
    });

    $("#no_table_quantity, #no_table_pieces").on("keyup", function(event) {        
        nospaces(this);
    });

    function nospaces(t){
        if(t.value.match(/\s/g)){
        alert('Sorry, you are not allowed to enter any spaces');
        t.value=t.value.replace(/\s/g,'0');
        }
    }    

    $('#btnAbort').click(function(){
        var _id = $(this).attr('data-id');
        bootbox.confirm({
            size: "small",
            message: "Abort the process?",
            buttons: {
                confirm: {
                    label: "Yes",
                    className: "btn-success"
                },
                cancel: {
                    label: "No",
                    className: "btn-danger"
                }
            },
            callback: function (result) {
                if (result) {
                    ajax('{{=URL('procurement','purchase_receipt_account_abort_transaction', args=request.args(0))}}');                     
                    location.reload();
                } 
            }
        })
    });    

    $('.delete').click(function(){
        var _id = $(this).attr('data-ct');
        bootbox.confirm({
            size: "small",
            message: "Delete this record?",
            buttons: {
                confirm: {
                    label: "Yes",
                    className: "btn-success"
                },
                cancel: {
                    label: "No",
                    className: "btn-danger"
                }
            },
            callback: function (result) {
                if (result) {
                    ajax("{{=URL('procurement','purchase_receipt_transaction_delete')}}" + '/'+ _id);
                    location.reload();
                }

            }
        })
    });    

    $('.del').click(function(){
        var _idd = $(this).attr('data-id');
        bootbox.confirm({
            size: "small",
            message: "Delete this record?",
            buttons: {
                confirm: {
                    label: "Yes",
                    className: "btn-success"
                },
                cancel: {
                    label: "No",
                    className: "btn-danger"
                }
            },
            callback: function (result) {
                if (result) {
                    ajax("{{=URL('procurement','purchase_receipt_transaction_delete_cons')}}" + '/'+ _idd);
                    console.log('delete', _idd);
                    //location.reload();
                }

            }
        })
    });    

    $('.dele').click(function(){
        var _in = $(this).attr('data-nt');
        bootbox.confirm({
            size: "small",
            message: "Delete this record?",
            buttons: {
                confirm: {
                    label: "Yes",
                    className: "btn-success"
                },
                cancel: {
                    label: "No",
                    className: "btn-danger"
                }
            },
            callback: function (result) {
                if (result) {
                    ajax("{{=URL('procurement','purchase_receipt_transaction_delete_new')}}" + '/'+ _in);
                    //location.reload();
                }

            }
        })
    });  

});



</script>

<script>
    $('#no_table_exchange_rate').change(function(){
        if ($('#no_table_exchange_rate').val() > $('#no_table_landed_cost').val()) {
            excAlert();
        } else {            
            var _for = $('#foreign_total_amount').val();
            var _exc = $('#no_table_exchange_rate').val();
            var _res = parseFloat(_for) * parseFloat(_exc)
            $('#local_total_amount').val(Number(_res.toFixed(3)).toLocaleString());              }
        
    });

    $('#no_table_other_charges').change(function(){
        recompute();
    });

    $('#no_table_landed_cost').change(function(){
        if ($('#no_table_landed_cost').val() < $('#no_table_exchange_rate').val()) {
            lanAlert();
        } else {
            var _for = $('#foreign_total_amount').val();
            var _pur = $('#no_table_landed_cost').val();
            var _res = parseFloat(_for) * parseFloat(_pur)
            $('#purchase_value').val(Number(_res.toFixed(3)).toLocaleString());      
        }
        
    });

    $('#discount').change(function(){
        recompute();
    });

    function recompute(){
        var _lan = $('#no_table_landed_cost').val();
        var _cus = $('#no_table_custom_duty_charges').val();
        var _oth = $('#no_table_other_charges').val();
        var _exc = $('#no_table_exchange_rate').val();
        var _ton = $('#total_net_amount').val();
        var _dis = $('#discount').val();    
        var _for = $('#foreign_total_amount').val();
        var _loc = $('#local_total_amount').val();

        _for = ((parseFloat(_ton) * (100 - parseFloat(_dis))) / 100) + parseFloat(_oth)
        _loc = parseFloat(_for) * parseFloat(_exc)      
        _pur = parseFloat(_for) * parseFloat(_lan)
        
        //console.log(_pur, _lan, _for, _ton);
        
        $('#foreign_total_amount').val(Number(_for.toFixed(3)).toLocaleString());                  
        $('#local_total_amount').val(Number(_loc.toFixed(3)).toLocaleString());   
        $('#purchase_value').val(Number(_pur.toFixed(3)).toLocaleString());                   
        //$('#purchase_value').val(_pur.format());                   
    };

    function compute(i, c, q, u, p, r){     
        var _diff = 0;
        var a = 0;
        var _p = 0;
        var _c = 0;
        var _a = 0;
        var _gt = 0;
        var _lnd = $('#no_table_landed_cost').val();
        var _dis = $('#discount').val();
        var _exc = $('#no_table_exchange_rate').val();
        var _oth = $('#no_table_other_charges').val();

        var remarks = document.getElementsByName('remarks');       
        var quantity = document.getElementsByName('quantity');
        var pieces = document.getElementsByName('pieces');
        var price_cost = document.getElementsByName('price_cost');
        var total_amount = document.getElementsByName('total_amount');

        var _p = parseInt(q) * parseInt(u) + parseInt(p)
        var _c = parseInt(r) / parseInt(u)
        var _a = _p * parseFloat(_c);

        console.log('compute');
        
        if (parseInt(c) < parseInt(_p)) {
            _diff = parseInt(_p) - parseInt(c)
            _out = Math.round(parseInt(_diff) / parseInt(u))
            _inn = parseInt(_diff) - (parseInt(_out) * parseInt(u))
            _uom = parseInt(u)            
            remarks.value = 'shorts '.concat(_out, ' - ', _inn, '/', _uom)
            $('#remarks').val(remarks.value);
        } else if (parseInt(c) === parseInt(_p)) {
            remarks.value = ''
            $('#remarks').val(remarks.value);
        } else if (parseInt(c) > parseInt(_p)) {            
            _diff = parseInt(c) - parseInt(p)
            _out = Math.round(parseInt(_diff) / parseInt(u))
            _inn = parseInt(_diff) - (parseInt(_out) * parseInt(u))
            _uom = parseInt(u)
            remarks.value = 'excess '.concat(_out, ' - ', _inn, '/', _uom)
            $('#remarks').val(remarks.value);
        }

        if (parseInt(q) < parseInt(0)) {
            quantity.value = 0
            remarks.value = 'excess ' + parseInt(u)
            $('#remarks').val(remarks.value);
            $('#quantity').val(quantity.value);
            return alert('Please enter a positive integer.');
        }

        if (parseInt(p) < parseInt(0)) {
            pieces.value = 0
            remarks.value = ''
            $('#remarks').val(remarks.value);
            $('#pieces').val(pieces.value);
            return alert('Please enter a positive integer.');
        }

        _gt = _gt + _a
        _foc = ((parseFloat(_gt) * (100 - parseFloat(_dis))) / 100) + parseFloat(_oth)
        _loc = parseFloat(_foc) * parseFloat(_exc)
        _pur = parseFloat(_foc) * parseFloat(_lnd)

        $('#total_net_amount').val(Number(_gt.toFixed(3)).toLocaleString());  
        $('#foreign_total_amount').val(_foc);  
        $('#local_total_amount').val(Number(_loc.toFixed(3)).toLocaleString());  
        $('#purchase_value').val(Number(_pur.toFixed(3)).toLocaleString());                 
        $('#total_amount').val(Number(_a.toFixed(3)).toLocaleString());
        
        
        
    }

    function computed(i, c, q, u, p, r){     
        var _diff = 0
        var _lnd = $('#no_table_landed_cost').val();
        var _gt = 0;
        var _loc = 0;
        var _discount = 0;
        var _dis = $('#discount').val();
        var _p = 0;
        var _c = 0;
        var _a = 0;
        var remarks = ''
        var _exc = $('#no_table_exchange_rate').val();
        var _oth = $('#no_table_other_charges').val();
        var remarks = document.getElementsByName('remarks');       
        var quantity = document.getElementsByName('quantity');
        var pieces = document.getElementsByName('pieces');
        var price_cost = document.getElementsByName('price_cost');
        var total_amount = document.getElementsByName('total_amount');
        for(var x = 0; x < i.length; x++){
            if (parseInt(u[x]) <= parseInt(p[x])){
                console.log(i);
                errAlert();
            } 

            var _p = parseInt(q[x]) * parseInt(u[x]) + parseInt(p[x])
            var _c = parseFloat(r[x]) / parseInt(u[x])
            var _a = _p * parseFloat(_c)

            if (parseInt(c[x]) < parseInt(_p)) {
                _diff = parseInt(_p) - parseInt(c[x]) 
                _out = Math.round(parseInt(_diff) / parseInt(u[x]) )
                _inn = parseInt(_diff) - (parseInt(_out) * parseInt(u[x]))
                _uom = parseInt(u[x])                 
                remarks[x].value = 'shorts '.concat(_out, ' - ', _inn, '/',_uom)                
                console.log(i, c, q, u, p, r);

            } else if (parseInt(c[x]) === parseInt(_p)) {
                remarks[x].value = ''
            } else if (parseInt(c[x]) > parseInt(_p)) {
                _diff =  parseInt(c[x]) - parseInt(_p)
                _out = Math.round(parseInt(_diff) / parseInt(u[x]) )
                _inn = parseInt(_diff) - (parseInt(_out) * parseInt(u[x]))
                _uom = parseInt(u[x])
                remarks[x].value = 'excess '.concat(_out, ' - ', _inn, '/',_uom)
            } 
            
            if (parseInt(q[x]) < parseInt(0)) {
                //console.log('not allowed');
                quantity[x].value = 0
                remarks[x].value = 'excess  ' + parseInt(u[x])
                return alert('Please enter a positive integer.');
            }  

            if (parseInt(p[x]) < parseInt(0)) {
                //console.log('not allowed');
                pieces[x].value = 0
                remarks[x].value = ''
                return alert('Please enter a positive integer.');
            }  

            total_amount[x].value = _a.toFixed(3);
            
            _gt = _gt + _a
            _foc = ((parseFloat(_gt) * (100 - parseFloat(_dis))) / 100) + parseFloat(_oth)
            //_foc = parseFloat(_foc_a) + parseFloat(_oth)
            //console.log(_foc);
            
        }        
        _loc = parseFloat(_foc) * parseFloat(_exc)
        _pur = parseFloat(_foc) * parseFloat(_lnd)

        $('#total_net_amount').val(Number(_gt.toFixed(3)).toLocaleString());  
        $('#foreign_total_amount').val(_foc);  
        $('#local_total_amount').val(Number(_loc.toFixed(3)).toLocaleString());                 
        $('#purchase_value').val(Number(_pur.toFixed(3)).toLocaleString());                 
                          
    }

    function errAlert(){
        bootbox.alert({
            size: "small",
            message: "Pieces value already exceed. \n Reset to zero.",
            callback: function(){ 
                $('.pieces').val(0);
                // location.reload();
            }
        });        
    }

    function excAlert(){
        bootbox.alert({
            size: "small",
            message: "Exchange Rate value must not more than Landed Cost Value.",
            callback: function(){ 
                $('#no_table_exchange_rate').val(3.64);
            }
        });        
    }

    
    function lanAlert(){
        bootbox.alert({
            size: "small",
            message: "Landed Cost Value must not less than Exchange Rate Value.",
            callback: function(){ 
                $('#no_table_landed_cost').val(3.64);
            }
        });        
    }

</script>