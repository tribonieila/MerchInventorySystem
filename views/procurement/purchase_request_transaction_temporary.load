<hr>
{{=table}}
{{=form.custom.begin}}
<div class="row">    
    <table class="table">
        <tr><td>Item Code</td><td>Quantity</td><td>Pieces</td><td>Discount %</td><td>Most Recent Cost(FC)</td><td>Category</td><td></td></tr>
        <tr>
            <td>{{=form.custom.widget.item_code}}</td>
            <td>{{=form.custom.widget.quantity}}</td>
            <td>{{=form.custom.widget.pieces}}</td>
            <td>{{=form.custom.widget.discount_percentage}}</td>
            <td>{{=form.custom.widget.most_recent_cost}}</td>
            <td>{{=form.custom.widget.category_id}}</td>
            <td><input class="btn btn-primary" type="submit" value="add" id="btnadd"></td>
        </tr>

    </table>
                                         
</div>

{{=form.custom.end}}
<div id = "_item_code_description"></div>      

<script>
$(document).ready(function(){
    $(".net_price, .total_amount").prop("readonly", true);    
    var $tblrows = $("#tblPRT tbody tr");

    $tblrows.each(function(index){
        var $tblrow = $(this);

        $tblrow.find(".quantity, .pieces, .price_cost, .discount_percentage").on("change", function(){

            var ctr = $tblrow.find("[name=ctr]").val();
            var uom = $tblrow.find("[name=uom]").val();
            var qty = $tblrow.find("[name=quantity]").val();
            var pcs = $tblrow.find("[name=pieces]").val();
            var pri = $tblrow.find("[name=price_cost]").val();
            var itd = $tblrow.find("[name=discount_percentage]").val();
            var net = $tblrow.find("[name=net_price]").val();
            var itm = parseInt(qty) * parseInt(uom) + parseInt(pcs);
            var ppp = parseFloat(pri) / parseInt(uom);
            var npr = parseFloat(pri) * (100 - parseFloat(itd)) / 100
            var sub = parseFloat(npr) / parseInt(uom) * parseInt(itm, 10)
                        
            var ada = $("#added_discount_amount").val();
            var _exchange_rate = $("#Purchase_Request_exchange_rate").val();

            if(parseInt(qty) < parseInt(0)){
                $("#btnUpdate").attr('disabled','disabled');
                onNegativeVal()
            } else if (parseInt(pcs) < parseInt(0)) {
                $("#btnUpdate").attr('disabled','disabled');
                onNegativeVal()
            } else if (parseFloat(itd) < parseFloat(0)) {
                $("#btnUpdate").attr('disabled','disabled');
                onNegativeVal()
            } else { 
                $("#btnUpdate").removeAttr('disabled');
            }
              
            if (!isNaN(sub)){            
                var grandTotal = 0;
                var discount = 0;
                var local = 0;
                var netAmount = 0;
                $tblrow.find(".net_price").val(npr.toLocaleString());
                $tblrow.find(".total_amount").val(sub.toLocaleString());                                
                $(".total_amount").each(function(){
                    var stval = parseFloat($(this).val().replace(/,/g,""));
                    grandTotal += isNaN(stval) ? 0 : stval;
                });
                netAmount = parseFloat(grandTotal) - parseFloat(ada);
                local = parseFloat(_exchange_rate) * parseFloat(netAmount);               
                $(".grand_total").val(grandTotal.toLocaleString());
                $(".foreign_amount").val(netAmount.toLocaleString());
                $(".local_amount").val(local.toLocaleString());
            }            
        });
    });

    $('#added_discount_amount').change(function(){        
        var _exchange_rate = $("#Purchase_Request_exchange_rate").val();
        var var_discount = $("#added_discount_amount").val();
        if(parseFloat(var_discount) < parseFloat(0)){
            onNegativeVal()
            $("#btnUpdate").attr('disabled','disabled');
        } else {
            $("#btnUpdate").removeAttr('disabled');
            var GrandTotal = $(".grand_total").val();
            var foreign = parseFloat(GrandTotal) - parseFloat(var_discount);        
            $("#foreign_amount").val(foreign.toLocaleString());
            var_local = parseFloat(foreign) * parseFloat(_exchange_rate);
            $("#local_amount").val(var_local.toLocaleString());
            ajax("{{=URL('procurement','put_added_discount_amount')}}", ['added_discount_amount']);
            console.log(foreign, var_discount, _exchange_rate, var_local)
        }

    });
    $(document).on('paste', '#no_table_item_code', function(e) {
        window.setTimeout(function() {
        var withoutSpaces = $("#no_table_item_code").val();
        withoutSpaces = withoutSpaces.replace(/\s+/g, '');
        $("#no_table_item_code").val(withoutSpaces);
            }, 1);
    });

    $("#no_table_quantity, #no_table_pieces, #most_recent_cost").on("keyup", function(event) {
        nospaces(this);
    });

    function nospaces(t){
        if(t.value.match(/\s/g)){
        alert('Sorry, you are not allowed to enter any spaces');
        t.value=t.value.replace(/\s/g,'0');
        }
    }    

    function onNegativeVal(){
        toastr["error"]("Nagative value not allowed!")
    }

    $('#no_table_item_code, #no_table_quantity, #no_table_pieces').change(function(){        
        ajax('{{=URL('purchase_request_item_code_description')}}', ['item_code'], '_item_code_description');     
        ajax('{{=URL('generate_item_code_recent_cost')}}', ['item_code']);    
        ajax('{{=URL('generate_category_id')}}',['item_code'], '_category_id'); 
        return false;
    });

    function numberWithCommas(x) {
        var parts = x.toString().split(".");
        parts[0] = parts[0].replace(/\B(?=(\d{3})+(?!\d))/g, ",");
        return parts.join(".");
    }

});
</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/bootbox.js/4.4.0/bootbox.min.js"></script>
<script>
$('.delete').click(function(){
    var _id = $(this).attr('data-id');
    bootbox.confirm({
        size: "small",
        message: "Would you like to delete this record?",
        buttons: {
            confirm: {
                label: "Yes",
                className: "btn-success"
            },
            cancel: {
                label: "No",
                className: "btn-danger"
            }
        },
        callback: function (result) {
            if (result) {
                ajax("{{=URL('procurement','purchase_request_transaction_temporary_delete')}}" + '/'+ _id);
                
            }
        }
    })
});   
 
</script>
