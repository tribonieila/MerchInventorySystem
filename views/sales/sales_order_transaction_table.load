{{=table}}
<input type="text" class="form-control" id="var_total_amount" name="var_total_amount" value={{=_total_amount}} hidden>
<input type="text" class="form-control" id="var_discount_added" name="var_discount_added" hidden>
<input type="text" class="form-control" id="var_net_amount" name="var_net_amount" value={{=_total_amount_after_discount}} hidden>

<script>
$(document).ready(function(){
    //$(".pass").attr("disabled","disabled");
    //$("a[type='button']").attr("disabled","disabled");
    //$(".save").removeAttr('href');
    var $tblrows = $("#tbltrnx tbody tr");
    $tblrows.each(function(index){
        var $tblrow = $(this);
        var add = $("#added_discount").val();
        $tblrow.find(".quantity, .pieces, .discount_percentage, .pass").on("change", function(){            
            
            
            var ctr = $tblrow.find("[name=ctr]").val();
            var uom = $tblrow.find("[name=uom]").val();
            var qty = $tblrow.find("[name=quantity]").val();
            var pcs = $tblrow.find("[name=pieces]").val();
            var pri = $tblrow.find("[name=price_cost]").val();
            var dis = $tblrow.find("[name=discount_percentage]").val();
            var tax = $tblrow.find("[name=selective_tax]").val();
            var who = $tblrow.find("[name=wholesale_price]").val();
            
            var itm = parseInt(qty) * parseInt(uom) + parseInt(pcs);
            var ppp = parseFloat(pri) / parseInt(uom);
            var pri = (parseFloat(who) * (100 - parseFloat(dis)) / 100) + parseFloat(tax)
            var sub = parseFloat(pri) / parseInt(uom) * parseInt(itm, 10) 
            // var sub = parseInt(itm, 10) * parseFloat(ppp);
            
            console.log("save button", _id)
            
            if(!isNaN(pri)){
                $tblrow.find(".net_price").val(pri.toFixed(2));
            }
            
            if(!isNaN(sub)){                
                $tblrow.find(".total_amount").val(sub.toFixed(2));
                
                _discount = 0
                var grandTotal = 0;
                $(".total_amount").each(function(){
                    var stval = parseFloat($(this).val());
                    grandTotal += isNaN(stval) ? 0 : stval;
                });
                
                $(".grand_total").val(grandTotal.toFixed(2));                
            }
            var add = $("#added_discount").val();
            _discount = parseFloat(grandTotal) - parseFloat(add)
            $(".net_amount").val(_discount.toFixed(2));                           

        });
    });
    $(".table").DataTable();
    $('.pass').click(function(){
        console.log("save click");
    });    
    $("#added_discount").change(function(){
        var _grand_total = $(".grand_total").val();
        var _discount = $("#added_discount").val();                
        var _net_amount = 0;
        if (isNaN(_discount) || _discount < 0 || _discount > 1) {
            text = "Discount not valid"
            $("#added_discount").val(0);
        } else {
            text = "Discount Added"                       
            _net_amount = parseFloat(_grand_total) - parseFloat(_discount);
            $(".net_amount").val(_net_amount.toFixed(2));       
            console.log(_grand_total, _discount, _net_amount);
        }
        document.getElementById("error").innerHTML = text;
    });
});
</script>

<script>

$('.delete').click(function(){
    var _id = $(this).attr('data-id');
    var parent = $(this).parent("div").parent("td").parent("tr");
    bootbox.confirm({
        size: "small",
        message: "Are you sure you want to delete this record?",
        buttons: {
            confirm: {
                label: "Yes",
                className: "btn-success"
            },
            cancel: {
                label: "No",
                className: "btn-danger"
            }
        },
        callback: function (result) {
            if (result) {
                ajax("{{=URL('sales','sales_order_delete_view')}}" + '/' + _id);
                parent.fadeOut('slow');
                //location.reload();
            }
        }
    })
});    
    function redirect(){
        window.location.replace("{{=URL('inventory','get_fmcg_workflow_grid',extension=False)}}")
    }
function trnx_cancel(){
    //console.log("Removing last item will automatically cancel the transactions... Yes/No?");
    bootbox.confirm({
        size: "small",
        message: "Removing last item will automatically cancel the transactions...",
        buttons: {
            confirm: {
                label: "Yes",
                className: "btn-success"
            },
            cancel: {
                label: "No",
                className: "btn-danger"
            }
        },
        callback: function (tranx) {
            if (tranx) {                
                console.log("cancelled");
                ajax("{{=URL('sales','cancel_tranx', args=request.args(0))}}");                
                window.location.href = '{{=URL('inventory','get_back_off_workflow_grid',extension=False)}}';
            }
        }
    })    
}
</script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/bootbox.js/4.4.0/bootbox.min.js"></script>